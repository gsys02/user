apply from: 'task.gradle'

project.ext {
	java_version			= '1.7'
	version					= '0.0.04'

	// projects
	util					= ":${project.name}-util"
	model					= ":${project.name}-model"
	service					= ":${project.name}-service"
	web						= ":${project.name}-web"

	// server
	servlet					= 'javax.servlet:javax.servlet-api:3.0.1'
	jetty					= 'org.mortbay.jetty:jetty-runner:8.1.15.v20140411'

	// spring
	spring_context			= 'org.springframework:spring-context:4.1.0.RELEASE'
	spring_webflow			= 'org.springframework.webflow:spring-webflow:2.4.0.RELEASE'
	spring_faces			= 'org.springframework.webflow:spring-faces:2.4.0.RELEASE'
	spring_security 		= 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
	spring_security_config	= 'org.springframework.security:spring-security-config:3.2.5.RELEASE'
	spring_security_taglibs	= 'org.springframework.security:spring-security-taglibs:3.2.5.RELEASE'

	pac4j_security			= 'org.pac4j:spring-security-pac4j:1.2.3'
	pac4j_cas				= 'org.pac4j:pac4j-cas:1.5.1'

	//jsf
	jsf_api					= 'com.sun.faces:jsf-api:2.2.0'
	jsf_impl		   		= 'com.sun.faces:jsf-impl:2.2.0'
	primefaces				= 'org.primefaces:primefaces:5.0'

	// lang
	groovy 					= 'org.codehaus.groovy:groovy-all:2.3.6'
	scala					= 'org.scala-lang:scala-compiler:2.11.0'

	// util
	slf4j					= 'org.slf4j:slf4j-log4j12:1.7.5'
	javax					= 'javax.annotation:javax.annotation-api:1.2'


	// test
	junit					= 'junit:junit:4.11'
}
def _=project.ext

allprojects {   version = _.version }

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'

	sourceCompatibility = _.java_version
	targetCompatibility = _.java_version

	repositories {
		mavenLocal()
		mavenCentral()
		maven{ url 'http://repository.primefaces.org'}
	}

	dependencies {
		compile 	_.slf4j
		testCompile _.junit
	}
}

/*
 * UTIL
 */
project(_.util){
	apply plugin: 'groovy'

	sourceSets {
		main { groovy { srcDir 'src/groovy' } }
		test { groovy { srcDir 'test/groovy' } }
	}
}


/* 
 * MODEL
 */
project(_.model){

	apply plugin: 'scala'

	sourceSets {
		main { scala { srcDir 'src/scala' } }
		test { scala { srcDir 'test/scala' } }
	}

	dependencies {
		compile project(_.util)
		compile _.scala
	}
}


/*
 * SERVICE
 */
project(_.service){

	apply plugin: 'groovy'

	sourceSets {
		main { groovy { srcDir 'src/groovy' } }
		test { groovy { srcDir 'test/groovy' } }
	}

	dependencies {
		compile project (_.util)
		compile project (_.model)
		compile         _.groovy
	}
}


/*
 * WEB
 */
project(_.web){

	apply plugin: 'war'
	apply plugin: 'groovy'
	apply plugin: 'eclipse-wtp'

	//war.archiveName "${rootProject.name}-${project.version}.war"
	war.archiveName "${rootProject.name}.war"

	configurations { jetty8 }

	sourceSets {
		main { groovy { srcDir 'src/groovy' } }
		test { groovy { srcDir 'test/groovy' } }
	}

	dependencies {
		compile project		(_.util)
		compile project 	(_.service)
		compile				_.groovy

		compile				_.spring_context
		compile				_.spring_webflow
		compile				_.spring_faces
		compile				_.spring_security
		compile				_.spring_security_config
		compile				_.spring_security_taglibs

		compile 			_.pac4j_security
		compile 			_.pac4j_cas

		compile				_.primefaces
		compile				_.jsf_api
		compile				_.jsf_impl
		compile				_.javax

		providedCompile		_.servlet

		jetty8			 	_.jetty
	}

	/*
	 * Para compilar deacuerdo al profile se debe pasar el parametro con -Pprofile=[pro|test]
	 */
	processResources{
		doFirst {
			if (project.hasProperty('profile')) {
				exclude '**/web.properties'
				rename ("web-${profile}.properties", 'web.properties')
			}else{
				exclude '**/web-*.properties'
			}
		}
	}

	task jetty(type: JavaExec) {
		main = "org.mortbay.jetty.runner.Runner"
		args = [war.archivePath]
		classpath configurations.jetty8
	}
}

